name: Build Docker images

on:
  push:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    name: Check changed files
    outputs:
      backend: ${{ steps.check_files.outputs.api-gateway }}
      frontend: ${{ steps.check_files.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: check modified files
        id: check_files
        run: |
            git diff --name-only HEAD^ HEAD > files.txt
            while IFS= read -r file; do
              echo $file
              if [[ $file == frontend/* ]]; then
                echo "frontend service will be rebuilt"
                echo "::set-output name=frontend::true"
              elif [[ $file == api-gateway/* ]]; then
                echo "api-gateway service will be rebuilt"
                echo "::set-output name=backend::true"
              else
                echo "file does not belong to any service"
              fi
            done < files.txt



  build-frontend:
    if: ${{ needs.init.outputs.frontend == 'true' }}
    name: Build and publish frontend to Docker Registry
    runs-on: ubuntu-latest
    needs: [init]
    env:
      frontend: ${{secrets.DOCKERHUB_USERNAME}}/api-designer-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Add SHORT_SHA
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Push frontend image
        uses: docker/build-push-action@v4
        with:
          context: frontend
          push: true
          tags: ${{env.frontend}}:latest
          cache-from: type=registry,ref=${{env.frontend}}:latest
          cache-to: type=inline
          platforms: linux/x86_64

  build-backend:
    if: ${{ needs.init.outputs.backend == 'true' }}
    name: Build and publish backend to Docker Registry
    runs-on: ubuntu-latest
    needs: [init]
    env:
      backend: ${{secrets.DOCKERHUB_USERNAME}}/api-designer-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Add SHORT_SHA
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Push backend image
        uses: docker/build-push-action@v4
        with:
          context: api-gateway
          push: true
          tags: ${{env.backend}}:latest
          cache-from: type=registry,ref=${{env.backend}}:latest
          cache-to: type=inline
          platforms: linux/x86_64
